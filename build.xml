<?xml version="1.0" encoding="UTF-8"?>

<project name="${ant.project.name}" default="build"  basedir=".">
    <description>
        Build file to automate Unit Tests, Config file, generate rapports, generate documentation, install vendors, Scan source code, detect duplication, detect mess, detect code violation, code browser,..
    </description>
    <property name="workspace" value="${basedir}" />
    <property name="sourcedir" value="${basedir}/src" />
    <property name="builddir" value="${workspace}/app/build" />

    <target name="build"
            depends="prepare,self-update-vendors,vendors-install,parallel-lint,phploc,pdepend,phpcpd,phpmd-ci,phpcs-ci,phpdoc,phpunit,phpcb"/>

    <target name="build-parallel" depends="prepare,parallel-lint,tools-parallel,phpunit,phpcb"/>

    <target name="tools-parallel" description="Run tools in parallel">
        <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend"/>
                <antcall target="phpmd-ci"/>
            </sequential>
            <antcall target="phpcpd"/>
            <antcall target="phpcs-ci"/>
            <antcall target="phploc"/>
            <antcall target="phpdoc"/>
        </parallel>
    </target>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${builddir}/api"/>
        <delete dir="${builddir}/code-browser"/>
        <delete dir="${builddir}/coverage"/>
        <delete dir="${builddir}/logs"/>
        <delete dir="${builddir}/pdepend"/>
        <delete dir="${builddir}/docs/*"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${builddir}/api"/>
        <mkdir dir="${builddir}/code-browser"/>
        <mkdir dir="${builddir}/coverage"/>
        <mkdir dir="${builddir}/logs"/>
        <mkdir dir="${builddir}/pdepend"/>
    </target>

    <condition property="parallel-lint" value="${basedir}/bin/parallel-lint.bat" else="${basedir}/bin/parallel-lint">
        <os family="windows"/>
    </condition>

    <target name="parallel-lint" description="Run PHP parallel lint">
        <exec executable="${parallel-lint}" failonerror="true">
            <arg line="--exclude" />
            <arg path="${basedir}/app/" />
            <arg line="--exclude" />
            <arg path="${basedir}/vendor/" />
            <arg path="${basedir}" />
        </exec>
    </target>

    <!--<target name="lint" description="Perform syntax check of sourcecode files">-->
        <!--<apply executable="php">-->
            <!--<arg value="-l" />-->
            <!--<fileset dir="${sourcedir}">-->
                <!--<include name="**/*.php" />-->
                <!--<modified />-->
            <!--</fileset>-->
            <!--<fileset dir="${basedir}/src/">-->
                <!--<include name="**/*Test.php" />-->
                <!--<modified />-->
            <!--</fileset>-->
        <!--</apply>-->
    <!--</target>-->

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="phploc">
            <arg value="--log-csv" />
            <arg value="${builddir}/logs/phploc.csv" />
            <arg path="${sourcedir}" />
        </exec>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${builddir}/logs/jdepend.xml" />
            <arg value="--jdepend-chart=${builddir}/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${builddir}/pdepend/overview-pyramid.svg" />
            <arg path="${sourcedir}" />
        </exec>
    </target>

    <target name="phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpmd">
            <arg path="${basedir}/src" />
            <arg value="text" />
            <arg value="${workspace}/app/phpmd.xml" />
        </exec>
    </target>

    <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="phpmd">
            <arg path="${sourcedir}" />
            <arg value="xml" />
            <arg value="${workspace}/app/phpmd.xml" />
            <arg value="--reportfile" />
            <arg value="${builddir}/logs/pmd.xml" />
        </exec>
    </target>

    <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpcs">
            <arg value="--standard=PSR2" />
            <arg path="${sourcedir}" />
        </exec>
    </target>

    <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="phpcs" output="/dev/null">
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${builddir}/logs/checkstyle.xml" />
            <arg value="--standard=PSR2" />
            <arg path="${sourcedir}" />
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="phpcpd">
            <arg value="--log-pmd" />
            <arg value="${builddir}/logs/pmd-cpd.xml" />
            <arg path="${sourcedir}" />
        </exec>
    </target>

    <target name="phpdoc" description="Generate API documentation using phpDox">
        <exec executable="phpdoc">
            <arg line="-d '${sourcedir}' -t '${builddir}/docs' --title='Tempo' " />
        </exec>
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="phpunit">
            <arg value="--coverage-clover"/>
            <arg value="${builddir}/logs/clover.xml"/>
            <arg value="--coverage-html"/>
            <arg value="${builddir}/coverage/"/>
            <arg value="-c" />
            <arg value="${basedir}/app/phpunit.xml" />
        </exec>
    </target>

    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="phpcb">
            <arg value="--log" />
            <arg path="${builddir}/logs" />
            <arg value="--source" />
            <arg path="${sourcedir}" />
            <arg value="--output" />
            <arg path="${builddir}/code-browser" />
        </exec>
    </target>

    <target name="self-update-vendors" description="Self pdate vendors">
        <exec executable="php" failonerror="true">
            <arg value="composer.phar" />
            <arg value="self-update" />
        </exec>
    </target>
    <target name="vendors-install" description="Install vendors">
        <exec executable="php" >
            <arg value="composer.phar" />
            <arg value="install" />
        </exec>
    </target>

</project>